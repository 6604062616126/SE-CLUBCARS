// /api/login.ts
import { NextRequest, NextResponse } from "next/server";
import { mysqlPool } from "@/utils/db";
import bcrypt from "bcryptjs";  // ‡πÉ‡∏ä‡πâ bcryptjs ‡πÅ‡∏ó‡∏ô bcrypt
const jwt = require('jsonwebtoken'); // ‡πÉ‡∏ä‡πâ jwt ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á Token
import { config } from "@/config"; // ‡∏î‡∏∂‡∏á secretkey

const secret = config.JWT_SECRET; // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ secret key ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö JWT

export async function POST(req: NextRequest) {
  console.log("üìå API login hit");
  try {
    const body = await req.json();  // ‡∏≠‡πà‡∏≤‡∏ô JSON request body
    const { phone, password } = body;

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å
    if (!phone || !password) {
      return NextResponse.json({ message: "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô" }, { status: 400 });
    }

    // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
    const query = `SELECT * FROM Customer WHERE phoneNumber = ?`;
    const [rows] = await mysqlPool.promise().query(query, [phone]);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (rows.length === 0) {
      return NextResponse.json({ message: "‚ùå ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö" }, { status: 404 });
    }

    const user = rows[0]; // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏û‡∏ö

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
    const isPasswordValid = await bcrypt.compare(password, user.password);
    if (!isPasswordValid) {
      return NextResponse.json({ message: "‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" }, { status: 401 });
    }


    
    const ADMIN_PHONE =  "0888888888"; 
    const STAFF_PHONE =  "0877777777"; 
    const isAdmin = user.phoneNumber === ADMIN_PHONE;
    const isStaff = user.phoneNumber === STAFF_PHONE;
    console.log("CID=",user.CustomerID);
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á JWT Token
    const token = jwt.sign(
      {
        id: user.CustomerID,
        phone: user.phoneNumber,
        role: isAdmin ? "admin" : isStaff ? "staff" : "user"
      },
      secret,
      { expiresIn: "1h" }  
    );
    // ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏û‡∏£‡πâ‡∏≠‡∏° JWT Token
    return NextResponse.json({
      message: isAdmin 
        ? "‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (admin)" 
        : isStaff 
          ? "‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (staff)" 
          : "‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
      token, id: user.CustomerID, name:user.userName ,
      role: isAdmin ? "admin" : isStaff ? "staff" : "user" // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î role ‡πÉ‡∏´‡πâ staff ‡∏î‡πâ‡∏ß‡∏¢
    }, { status: 200 });


  } catch (err) {
    console.error("üö® Error during login:", err);
    return NextResponse.json({ message: "‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö" }, { status: 500 });
  }
}
