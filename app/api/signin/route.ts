import { NextRequest, NextResponse } from "next/server";  // ‡πÄ‡∏û‡∏¥‡πà‡∏° NextRequest
import { mysqlPool } from "@/utils/db";
import bcrypt from "bcryptjs"; 

export async function POST(req: NextRequest) {  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á req
  console.log("üìå API signin hit");

  try {
      const body = await req.json();  // ‡∏≠‡πà‡∏≤‡∏ô JSON request body
      const { firstName, lastName, username, phone, password } = body;

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å
      if (!firstName || !lastName || !username || !phone || !password) {
          return NextResponse.json({ message: "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô" }, { status: 400 });
      }
      // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ username ‡∏ã‡πâ‡∏≥‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
      const existingUserNameQuery = `SELECT * FROM Customer WHERE userName = ?`;
      const [existingUserName] = await mysqlPool.promise().query(existingUserNameQuery, [username]);

      if (existingUserName.length > 0) {
          return NextResponse.json({ message: "‚ö†Ô∏è ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß" }, { status: 400 });
      }

      
      const existingPhoneQuery = `
          SELECT * FROM Customer WHERE phoneNumber = ? 
      `;
      const [existingPhone] = await mysqlPool.promise().query(existingPhoneQuery, [phone]);

      if (existingPhone.length > 0) {
          return NextResponse.json({ message: "‚ö†Ô∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß" }, { status: 400 });
      }

      // ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      const hashedPassword = await bcrypt.hash(password, 10);  // 10 ‡∏Ñ‡∏∑‡∏≠‡∏à‡∏≥‡∏ô‡∏ß‡∏ô salt rounds
      const query = `
          INSERT INTO Customer (firstName, lastName, userName, phoneNumber, password)
          VALUES (?, ?, ?, ?, ?)
      `;

      await mysqlPool.promise().query(query, [firstName, lastName, username, phone, hashedPassword]);

      return NextResponse.json({ message: "‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!" }, { status: 200 });

  } catch (err) {
      console.error("üö® Error inserting customer data:", err);
      return NextResponse.json({ message: "‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å" }, { status: 500 });
  }
}
