import  TokenManager  from "@/utils/tokenManager";  // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ TokenManager
import { mysqlPool } from "@/utils/db";
import {Rental} from "./RentalC" ;
import {Payment} from "./PaymentC" ;
class Notification {
  message: string;
  recipient: string;
  userID: number;

  constructor(message: string, recipient: string, userID: number) {
    this.message = message;
    this.recipient = recipient;
    this.userID = userID;
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á Notification
  async send() {
    const query = `
      INSERT INTO Notifications (message, recipient, CustomerID)
      VALUES (?, ?, ?)
    `;
    const values = [this.message, this.recipient, this.userID];
    await mysqlPool.query(query, values);
  }
}

class NotificationManager {
  private adminObservers: any[] = [];
  private userObservers: { [key: number]: any } = {};

  addAdminObserver(admin: any) {
    this.adminObservers.push(admin);
  }

  addUserObserver(userID: number, observer: any) {
    this.userObservers[userID] = observer;
  }

  removeUserObserver(userID: number) {
    delete this.userObservers[userID];
  }

  // üî¥ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô "User ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á"
  notifyCancellation(rental: Rental) {
    const message = `
      ‚ùå ‚õî ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å:
      - üè† ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÇ‡∏î‡∏¢‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (customerID: ${rental.customerID})
    `;

    // üì® ‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ User ‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á
    if (this.userObservers[rental.customerID]) {
      this.userObservers[rental.customerID].update(message);
    }

    // üì® ‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ Admin
    this.adminObservers.forEach(admin => admin.update(message));
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
  async sendrentalNotification(token: string, rental: Rental, payment: Payment, formData: any) {
    const tokenManager = TokenManager.getInstance();
    try {
      const decoded = tokenManager.verifyToken(token);
  
      // ‡∏´‡∏≤‡∏Å token ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á, ‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏î‡πâ
      const userID = decoded.id;
  
      const userMessage = `
        üìÖ ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:
        - üè† ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á ID
        - üí∞ ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô: ${payment.amount} ‡∏ö‡∏≤‡∏ó
        - üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${rental.rentalStatus}
        - üìù ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°: ${formData.details}  // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å formData
      `;
  
      const adminMessage = `
        üì¢ ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà:
        - üè† ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á ID
        - üí∞ ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô: ${payment.amount} ‡∏ö‡∏≤‡∏ó
        - üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${rental.rentalStatus}
        - üìù ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°: ${formData.details}  // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å formData
      `;
  
      // ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
      const userNotification = new Notification(userMessage, `User ${userID}`, userID);
      await userNotification.send();
  
      // ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
      this.adminObservers.forEach(admin => {
        const adminNotification = new Notification(adminMessage, `Admin ${admin.id}`, admin.id);
        adminNotification.send();
      });
  
    } catch (error) {
      console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:", error);
    }
  }
}
  

export const notificationManager = new NotificationManager();

  